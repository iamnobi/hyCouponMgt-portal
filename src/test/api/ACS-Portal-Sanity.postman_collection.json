{
	"info": {
		"_postman_id": "cf8e37f2-f549-4457-bada-25e9ee98ec21",
		"name": "ACS-Portal-Sanity",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Risk",
			"item": [
				{
					"name": "黑名單驗證狀態設定",
					"item": [
						{
							"name": "更新",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ee38c268-b56d-45c9-8c1e-a1ce921094f6",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "取得黑名單驗證狀態列表",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"if(response.data !== undefined){",
													"    for(i = 0 ; i < response.data.length ; i++){",
													"        var category = response.data[i].category;",
													"        if(\"卡號黑名單\" === category){",
													"            var id = response.data[i].id;",
													"            pm.environment.set(\"dataId\", id);",
													"            console.log(\"黑名單驗證狀態-卡號黑名單id=\" + id);",
													"            break;",
													"        }",
													"    }",
													"}",
													"   ",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) dataLen = response.data.length;",
													"    ",
													"    pm.expect(dataLen).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_AUTH_STATUS\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/auth-status-list/{{issuerBankId}}",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"auth-status-list",
												"{{issuerBankId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "更新黑名單驗證狀態",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"",
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_AUTH_STATUS\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{dataId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"authStatus\": \"N\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/auth-status/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"auth-status",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"console.log(response.data)",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"pm.globals.set(\"auditId\", auditId)",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"}",
													"console.log(response.data.id);",
													"console.log(dataId);",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    if (!response.data.id) {",
													"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
													"    } else {",
													"        pm.response.to.have.status(200);",
													"        pm.expect(dataId).not.equal(0);",
													"    }",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a6848342-a911-4474-8fe6-cc2b106c2faf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ded65908-0eb8-4516-9cca-6b438896ac7f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "卡號黑名單",
					"item": [
						{
							"name": "新增卡號黑名單",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ee38c268-b56d-45c9-8c1e-a1ce921094f6",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "新增卡號黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"",
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"",
													"var random = Math.floor(Math.random() * (10000 - 0)) + 90000;",
													"",
													"pm.environment.unset(\"dataId\"); // reset dataId",
													"",
													"var realCardNumber = \"4\" + random + \"1000513253\";",
													"pm.environment.set(\"realCardNumber\", realCardNumber);",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", realCardNumber);",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_PAN\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"realCardNumber\":\"{{realCardNumber}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/card-number",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"card-number"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"console.log(response.data)",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"pm.globals.set(\"auditId\", auditId)",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"}",
													"console.log(response.data.id);",
													"console.log(dataId);",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    if (!response.data.id) {",
													"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
													"    } else {",
													"        pm.response.to.have.status(200);",
													"        pm.expect(dataId).not.equal(0);",
													"    }",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a6848342-a911-4474-8fe6-cc2b106c2faf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ded65908-0eb8-4516-9cca-6b438896ac7f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "查詢卡號黑名單",
							"item": [
								{
									"name": "查詢卡號黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) dataLen = response.data.length;",
													"    ",
													"    pm.expect(dataLen).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_PAN\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"realCardNumber\":\"{{realCardNumber}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/pan/query",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"pan",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cce0fdda-9218-4024-9c24-060a998ebe36",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8bb365b2-e76e-44e4-8729-952d7a62c58b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "刪除卡號黑名單",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "刪除卡號黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
												"exec": [
													"const response = pm.response.json();",
													"",
													"pm.test(\"Delete Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"if (response.data) {",
													"    if (response.data.status === \"AUDITING\") {",
													"        pm.environment.set(\"auditId\", response.data.id)",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6f89cefb-7ac4-4803-b422-d1a7089b13e0",
												"exec": [
													"",
													"var dataId = pm.environment.get(\"dataId\");",
													"console.log(\"blacklist:\" + dataId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"{{dataId}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/pan/delete",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"pan",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Delete Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
												"exec": [
													"pm.test(\"Signing Delete Approve completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8f897335-74a2-46d6-84fd-cf42ffa0d78c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "IP黑名單",
					"item": [
						{
							"name": "新增IP黑名單",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ee38c268-b56d-45c9-8c1e-a1ce921094f6",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "新增IP黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"",
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"",
													"var ipv4_1 = Math.floor(Math.random() * (255 - 0)) + 0;",
													"var ipv4_2 = Math.floor(Math.random() * (255 - 0)) + 0;",
													"var ipv4_3 = Math.floor(Math.random() * (255 - 0)) + 0;",
													"var ipv4_4 = Math.floor(Math.random() * (255 - 0)) + 0;",
													"",
													"pm.environment.unset(\"dataId\"); // reset dataId",
													"",
													"var ip = ipv4_1 + \".\" + ipv4_2 + \".\" + ipv4_3 + \".\" + ipv4_4;",
													"pm.environment.set(\"ip\", ip);",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", ip);",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_IP\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\": {{issuerBankId}},\n    \"ip\": \"{{ip}}\",\n    \"cidr\": \"1\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/ip",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"ip"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"console.log(response.data)",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"pm.globals.set(\"auditId\", auditId)",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"}",
													"console.log(response.data.id);",
													"console.log(dataId);",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    if (!response.data.id) {",
													"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
													"    } else {",
													"        pm.response.to.have.status(200);",
													"        pm.expect(dataId).not.equal(0);",
													"    }",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a6848342-a911-4474-8fe6-cc2b106c2faf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ded65908-0eb8-4516-9cca-6b438896ac7f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "查詢IP黑名單",
							"item": [
								{
									"name": "查詢IP黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) dataLen = response.data.length;",
													"    ",
													"    pm.expect(dataLen).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_IP\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ip\":\"{{ip}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/ip/query",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"ip",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cce0fdda-9218-4024-9c24-060a998ebe36",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8bb365b2-e76e-44e4-8729-952d7a62c58b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "刪除IP黑名單",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "刪除IP黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
												"exec": [
													"const response = pm.response.json();",
													"",
													"pm.test(\"Delete Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"if (response.data) {",
													"    if (response.data.status === \"AUDITING\") {",
													"        pm.environment.set(\"auditId\", response.data.id)",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6f89cefb-7ac4-4803-b422-d1a7089b13e0",
												"exec": [
													"",
													"var dataId = pm.environment.get(\"dataId\");",
													"console.log(\"blacklist:\" + dataId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"{{dataId}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/ip/delete",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"ip",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Delete Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
												"exec": [
													"pm.test(\"Signing Delete Approve completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8f897335-74a2-46d6-84fd-cf42ffa0d78c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5111ff03-1f21-4b18-8cee-a4fcaa98054a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d680ad8d-4bfb-4b7f-b394-e1dce81cf496",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "MerchantUrl黑名單",
					"item": [
						{
							"name": "新增MerchantUrl黑名單",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ee38c268-b56d-45c9-8c1e-a1ce921094f6",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "新增MerchantUrl黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"",
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"",
													"var random = Math.floor(Math.random() * (99999 - 0)) + 0;",
													"",
													"pm.environment.unset(\"dataId\"); // reset dataId",
													"",
													"var merchantUrl = \"url_\"+ random;",
													"pm.environment.set(\"merchantUrl\", merchantUrl);",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", merchantUrl);",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_MERCHANT_URL\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n    \"merchantUrl\": \"{{merchantUrl}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/merchant-url",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"merchant-url"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"console.log(response.data)",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"pm.globals.set(\"auditId\", auditId)",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"}",
													"console.log(response.data.id);",
													"console.log(dataId);",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    if (!response.data.id) {",
													"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
													"    } else {",
													"        pm.response.to.have.status(200);",
													"        pm.expect(dataId).not.equal(0);",
													"    }",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a6848342-a911-4474-8fe6-cc2b106c2faf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ded65908-0eb8-4516-9cca-6b438896ac7f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "查詢MerchantUrl黑名單",
							"item": [
								{
									"name": "查詢MerchantUrl黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) dataLen = response.data.length;",
													"    ",
													"    pm.expect(dataLen).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BLACK_LIST_MERCHANT_URL\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"merchantUrl\": \"{{merchantUrl}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/merchant-url/query",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"merchant-url",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cce0fdda-9218-4024-9c24-060a998ebe36",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8bb365b2-e76e-44e4-8729-952d7a62c58b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "刪除MerchantUrl黑名單",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "刪除MerchantUrl黑名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
												"exec": [
													"const response = pm.response.json();",
													"",
													"pm.test(\"Delete Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"if (response.data) {",
													"    if (response.data.status === \"AUDITING\") {",
													"        pm.environment.set(\"auditId\", response.data.id)",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6f89cefb-7ac4-4803-b422-d1a7089b13e0",
												"exec": [
													"",
													"var dataId = pm.environment.get(\"dataId\");",
													"console.log(\"blacklist:\" + dataId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"{{dataId}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/blacklist/merchant-url/delete",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"blacklist",
												"merchant-url",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Delete Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
												"exec": [
													"pm.test(\"Signing Delete Approve completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8f897335-74a2-46d6-84fd-cf42ffa0d78c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5111ff03-1f21-4b18-8cee-a4fcaa98054a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d680ad8d-4bfb-4b7f-b394-e1dce81cf496",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "白名單管理",
					"item": [
						{
							"name": "Create WhiteList",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ee38c268-b56d-45c9-8c1e-a1ce921094f6",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "新增白名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"",
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"",
													"var random = Math.floor(Math.random() * (10000 - 0)) + 90000;",
													"",
													"pm.environment.unset(\"dataId\"); // reset dataId",
													"",
													"var realCardNumber = \"4\" + random + \"1000513253\";",
													"pm.environment.set(\"realCardNumber\", realCardNumber);",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", realCardNumber);",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"WHITE_LIST\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"realCardNumber\":\"{{realCardNumber}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/whitelist/pan",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"whitelist",
												"pan"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"console.log(response.data)",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"pm.globals.set(\"auditId\", auditId)",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"}",
													"console.log(response.data.id);",
													"console.log(dataId);",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    if (!response.data.id) {",
													"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
													"    } else {",
													"        pm.response.to.have.status(200);",
													"        pm.expect(dataId).not.equal(0);",
													"    }",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Query WhiteList",
							"item": [
								{
									"name": "查詢白名單 - 分頁",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) dataLen = response.data.length;",
													"    ",
													"    pm.expect(dataLen).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"WHITE_LIST\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"realCardNumber\":\"{{realCardNumber}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/whitelist/pan/query",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"whitelist",
												"pan",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete WhiteList",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "刪除白名單",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
												"exec": [
													"const response = pm.response.json();",
													"",
													"pm.test(\"Delete Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"if (response.data) {",
													"    if (response.data.status === \"AUDITING\") {",
													"        pm.environment.set(\"auditId\", response.data.id)",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6f89cefb-7ac4-4803-b422-d1a7089b13e0",
												"exec": [
													"",
													"var dataId = pm.environment.get(\"dataId\");",
													"console.log(\"whitelist:\" + dataId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"{{dataId}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/risk/whitelist/delete",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"risk",
												"whitelist",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Delete Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
												"exec": [
													"pm.test(\"Signing Delete Approve completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8f897335-74a2-46d6-84fd-cf42ffa0d78c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "System Setting",
			"item": [
				{
					"name": "Bin Range",
					"item": [
						{
							"name": "Create",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c1ee39d3-f4b3-409f-8be5-c07daf097568",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bin Range - Add",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "905c73c1-6a2e-4042-9555-3f0b1467f471",
												"exec": [
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "526ae1c0-c8d4-45a0-b13d-cd115bfc9764",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"SYS_BIN_RANGE\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"cardBrand\": \"MASTERCARD\",\n\t\"cardType\": \"CREDIT\",\n    \"startRange\": \"5405110000000004\",\n    \"endRange\": \"5405119999999999\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/bin-range",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"bin-range"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"}",
													"",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Query",
							"item": [
								{
									"name": "Bin Range - Query All",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aeafd9f0-2c17-4d90-9474-6ce32e9b5cc6",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) dataLen = response.data.length;",
													"    ",
													"    pm.expect(dataLen).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/bin-range/query",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"bin-range",
												"query"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bin Range - \bUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-csrf-token",
												"value": "{{acs-csrf-token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"id\": \"{{dataId}}\",\n\t\"cardBrand\": \"MASTERCARD\",\n\t\"cardType\": \"CREDIT\",\n    \"startRange\": \"5405110000000004\",\n    \"endRange\": \"5405119999999999\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/bin-range/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"bin-range",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bin Range - Delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-csrf-token",
												"value": "{{acs-csrf-token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": {{dataId}},\n\t\"issuerBankId\": {{issuerBankId}}\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/bin-range/delete",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"bin-range",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Delete Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
												"exec": [
													"pm.test(\"Signing Delete Approve completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Error Code",
					"item": [
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4124dcc0-187c-4929-b1b2-95591cb08b57",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Error Code - Query function list",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7cc4bcd-6ca1-426b-bfd0-7e797974b3e3",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"var dataId = 0;",
													"",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) {",
													"        dataLen = response.data.length;",
													"        dataId = response.data[0].id;",
													"    }",
													"    ",
													"    ",
													"    pm.environment.set(\"dataId\", dataId);",
													"    pm.expect(dataLen).not.equal(0);",
													"    pm.expect(dataId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8056571-b5fb-4aa7-b006-390b785e5cf4",
												"exec": [
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"SYS_ERROR_CODE\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-csrf-token",
												"value": "{{acs-csrf-token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/error-code/function-names",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"error-code",
												"function-names"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Error Code - \bUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"auditId: \" + dataId);",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"",
													"pm.environment.set(\"identifySymbol\", \"errCode_\"+n);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\": \"{{orgBankId}}\",\n    \"id\": 1,\n    \"codeMappingList\": [\n        {\n            \"id\": 1,\n            \"errorCode\": \"1000\",\n            \"errorMsg\": \"{{identifySymbol}}\"\n        },\n        {\n            \"id\": 2,\n            \"errorCode\": \"1001\",\n            \"errorMsg\": \"AReq請求參數錯誤\"\n        },\n        {\n            \"id\": 3,\n            \"errorCode\": \"1002\",\n            \"errorMsg\": \"此卡號已停用3DS驗證\"\n        },\n        {\n            \"id\": 4,\n            \"errorCode\": \"1003\",\n            \"errorMsg\": \"3RI不授權(Not Authentication)\"\n        },\n        {\n            \"id\": 5,\n            \"errorCode\": \"1100\",\n            \"errorMsg\": \"驗證BinRange時系統發生異常\"\n        },\n        {\n            \"id\": 6,\n            \"errorCode\": \"1101\",\n            \"errorMsg\": \"此卡號不在BinRange範圍\"\n        },\n        {\n            \"id\": 7,\n            \"errorCode\": \"1200\",\n            \"errorMsg\": \"持卡人驗證時系統發生異常\"\n        },\n        {\n            \"id\": 8,\n            \"errorCode\": \"1201\",\n            \"errorMsg\": \"持卡人驗證失敗\"\n        },\n        {\n            \"id\": 9,\n            \"errorCode\": \"1300\",\n            \"errorMsg\": \"驗證卡號黑名單時系統發生異常\"\n        },\n        {\n            \"id\": 10,\n            \"errorCode\": \"1301\",\n            \"errorMsg\": \"此卡號被列入黑名單(blacklist)\"\n        },\n        {\n            \"id\": 11,\n            \"errorCode\": \"1302\",\n            \"errorMsg\": \"此卡號被列入驗證名單(challenge)\"\n        },\n        {\n            \"id\": 12,\n            \"errorCode\": \"1400\",\n            \"errorMsg\": \"驗證裝置ID黑名單時系統發生異常\"\n        },\n        {\n            \"id\": 13,\n            \"errorCode\": \"1401\",\n            \"errorMsg\": \"此裝置ID被列入黑名單(blacklist)\"\n        },\n        {\n            \"id\": 14,\n            \"errorCode\": \"1402\",\n            \"errorMsg\": \"此裝置ID被列入驗證名單(challenge)\"\n        },\n        {\n            \"id\": 15,\n            \"errorCode\": \"1500\",\n            \"errorMsg\": \"驗證IP黑名單時系統發生異常\"\n        },\n        {\n            \"id\": 16,\n            \"errorCode\": \"1501\",\n            \"errorMsg\": \"此IP被列入黑名單(blacklist)\"\n        },\n        {\n            \"id\": 17,\n            \"errorCode\": \"1502\",\n            \"errorMsg\": \"此IP被列入驗證名單(blacklist)\"\n        },\n        {\n            \"id\": 18,\n            \"errorCode\": \"1600\",\n            \"errorMsg\": \"驗證Merchant URL黑名單時系統發生異常\"\n        },\n        {\n            \"id\": 19,\n            \"errorCode\": \"1601\",\n            \"errorMsg\": \"此Merchant URL被列入黑名單(blacklist)\"\n        },\n        {\n            \"id\": 20,\n            \"errorCode\": \"1602\",\n            \"errorMsg\": \"此Merchant URL被列入驗證名單(blacklist)\"\n        },\n        {\n            \"id\": 21,\n            \"errorCode\": \"1700\",\n            \"errorMsg\": \"計算CAVV時系統發生異常\"\n        },\n        {\n            \"id\": 22,\n            \"errorCode\": \"1701\",\n            \"errorMsg\": \"計算台幣匯率時系統發生異常\"\n        },\n        {\n            \"id\": 23,\n            \"errorCode\": \"1800\",\n            \"errorMsg\": \"threeDSRequestorChallengeInd\"\n        },\n        {\n            \"id\": 24,\n            \"errorCode\": \"1900\",\n            \"errorMsg\": \"此卡號被列入白名單\"\n        },\n        {\n            \"id\": 25,\n            \"errorCode\": \"1901\",\n            \"errorMsg\": \"驗證卡號白名單時系統發生異常\"\n        },\n        {\n            \"id\": 26,\n            \"errorCode\": \"1910\",\n            \"errorMsg\": \"人工彈性授權\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/error-code/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"error-code",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update {{functionType}} published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Check Audit Log",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdea1c0d-8ecf-4dd1-8205-2c23ca1a662d",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"var currentAuditId = pm.environment.get(\"auditId\").toString(); ",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[i].auditId.toString() !== currentAuditId) continue;",
													"    ",
													"    auditId = response.data[i].auditId;",
													"    break;",
													"}",
													"",
													"pm.test(functionType + \" query personal auditing log completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e2499321-cb19-4a52-bc9d-d4704f67c7ca",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"auditStatus\": \"P\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/log/personal",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"log",
												"personal"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "64b80b74-317b-4188-9b22-10281c717233",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f78f8d21-d4ea-4a60-84a7-36d963443e1e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "ACS Operator ID",
					"item": [
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d188f968-11da-4c7a-bb62-5c6243763477",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "ACS Operator ID - 查詢ACS操作者ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7cc4bcd-6ca1-426b-bfd0-7e797974b3e3",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"var dataId = 0;",
													"",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) {",
													"        dataLen = response.data.length;",
													"        dataId = response.data[0].id;",
													"    }",
													"    ",
													"    ",
													"    pm.environment.set(\"dataId\", dataId);",
													"    pm.expect(dataLen).not.equal(0);",
													"    pm.expect(dataId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8056571-b5fb-4aa7-b006-390b785e5cf4",
												"exec": [
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"SYS_ACS_OPERATOR_ID\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/acs-operator-ids/{{orgBankId}}",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"acs-operator-ids",
												"{{orgBankId}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "ACS Operator ID - \bUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"auditId: \" + dataId);",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													"var random = Math.floor(Math.random() * (100000 - 0)) + 900000;",
													"pm.environment.set(\"value\", \"BIGOPR\" + random);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\" : -1,\n\t\"issuerBankId\" : \"{{orgBankId}}\",\n\t\"valueList\" : [\n\t\t{\n\t\t\t\"id\" : 6,\n\t\t\t\"value\" : \"{{value}}\"\n\t\t},\n\t\t{\n\t\t\t\"id\" : 7,\n\t\t\t\"value\" : \"{{value}}\"\n\t\t},\n\t\t{\n\t\t\t\"id\" : 8,\n\t\t\t\"value\" : \"{{value}}\"\n\t\t}\n\t]\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/acs-operator-id/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"acs-operator-id",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update {{functionType}} published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "連線逾時設定",
					"item": [
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d188f968-11da-4c7a-bb62-5c6243763477",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "查詢連線逾時設定",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7cc4bcd-6ca1-426b-bfd0-7e797974b3e3",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"var dataId = 0;",
													"",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) {",
													"        dataLen = response.data.length;",
													"        dataId = response.data.id;",
													"    }",
													"    ",
													"    ",
													"    pm.environment.set(\"dataId\", dataId);",
													"    pm.expect(dataLen).not.equal(0);",
													"    pm.expect(dataId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8056571-b5fb-4aa7-b006-390b785e5cf4",
												"exec": [
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"SYS_TIMEOUT\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/timeout/VISA/{{orgBankId}}",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"timeout",
												"VISA",
												"{{orgBankId}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "修改連線逾時設定",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"auditId: \" + dataId);",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\" : \"{{orgBankId}}\",\n\t\"id\" : \"{{dataId}}\",\n\t\"value\" : \"{{$randomInt}}\"\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/timeout/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"timeout",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update {{functionType}} published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "驗證畫面設定",
					"item": [
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d188f968-11da-4c7a-bb62-5c6243763477",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "查詢驗證設定畫面",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7cc4bcd-6ca1-426b-bfd0-7e797974b3e3",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"var dataId = 0;",
													"",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) {",
													"        dataLen = response.data.length;",
													"        dataId = response.data.id;",
													"    }",
													"    ",
													"    ",
													"    pm.environment.set(\"dataId\", dataId);",
													"    pm.expect(dataLen).not.equal(0);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													"",
													"if (response.data) {",
													"    if (response.data.phoneVerifyPage) {",
													"        var phoneVerifyPageId = response.data.phoneVerifyPage.id;",
													"        pm.environment.set(\"phoneVerifyPageId\", phoneVerifyPageId);",
													"        console.log(\"phoneVerifyPageId=\" + phoneVerifyPageId);",
													"    }",
													"    if (response.data.otpVerifyPage) {",
													"        var otpVerifyPageId = response.data.otpVerifyPage.id;",
													"        pm.environment.set(\"otpVerifyPageId\", otpVerifyPageId);",
													"        console.log(\"otpVerifyPageId=\" + otpVerifyPageId);",
													"        if (response.data.otpVerifyPage.otpVerifySetting) {",
													"          ",
													"            var otpVerifySettingId = response.data.otpVerifyPage.otpVerifySetting.id;",
													"            pm.environment.set(\"otpVerifySettingId\", otpVerifySettingId);",
													"            console.log(\"otpVerifySettingId=\" + otpVerifySettingId);",
													"        }",
													"        ",
													"    }",
													"   ",
													"}",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8056571-b5fb-4aa7-b006-390b785e5cf4",
												"exec": [
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"SYS_CHALLENGE_VIEW\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/challenge/message/{{issuerBankId}}",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"challenge",
												"message",
												"{{issuerBankId}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d188f968-11da-4c7a-bb62-5c6243763477",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "修改驗證畫面設定",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"auditId: \" + dataId);",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\" : \"{{issuerBankId}}\",\n\t\"id\" : \"{{dataId}}\",\n\t\"phoneVerifyPage\" : {\n\t\t\"id\": \"{{phoneVerifyPageId}}\",\n\t\t\"category\": \"phoneVerifyPage\",\n\t\t\"mainBodyTitle\": \"{{$randomLoremWords}}\",\n\t\t\"mainBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"webRemarkBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"webRemarkBodyColor\": \"{{$randomHexColor}}\",\n\t\t\"webRemarkBodyPlaceholder\": \"{{$randomLoremWords}}\",\n\t\t\"verifyInputPlaceholder\": \"{{$randomLoremWords}}\",\n\t\t\"appRemarkBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"btnBodySubmitButton\": \"{{$randomLoremWords}}\",\n\t\t\"btnBodyPhoneErrorButton\": \"{{$randomLoremWords}}\",\n\t\t\"btnBodyOtpResendButton\": \"{{$randomLoremWords}}\",\n\t\t\"phoneErrorBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"phoneErrorBodySymbol\": false,\n\t\t\"footerLabel1\": \"{{$randomLoremWords}}\",\n\t\t\"footerMessage1\": \"{{$randomLoremWords}}\",\n\t\t\"footerLabel2\": \"{{$randomLoremWords}}\",\n\t\t\"footerMessage2\": \"{{$randomLoremWords}}\"\n\t},\n\t\"otpVerifyPage\" : {\n\t\t\"id\": \"{{otpVerifyPageId}}\",\n\t\t\"category\": \"otpVerifyPage\",\n\t\t\"mainBodyTitle\": \"{{$randomLoremWords}}\",\n\t\t\"mainBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"webRemarkBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"webRemarkBodyColor\": \"{{$randomHexColor}}\",\n\t\t\"webRemarkBodyPlaceholder\": \"{{$randomLoremWords}}\",\n\t\t\"verifyInputPlaceholder\": \"{{$randomLoremWords}}\",\n\t\t\"appRemarkBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"btnBodySubmitButton\": \"{{$randomLoremWords}}\",\n\t\t\"btnBodyPhoneErrorButton\": \"{{$randomLoremWords}}\",\n\t\t\"btnBodyOtpResendButton\": \"{{$randomLoremWords}}\",\n\t\t\"phoneErrorBodyMessage\": \"{{$randomLoremWords}}\",\n\t\t\"phoneErrorBodySymbol\": false,\n\t\t\"footerLabel1\": \"{{$randomLoremWords}}\",\n\t\t\"footerMessage1\": \"{{$randomLoremWords}}\",\n\t\t\"footerLabel2\": \"{{$randomLoremWords}}\",\n\t\t\"footerMessage2\": \"{{$randomLoremWords}}\",\n\t\t\"otpVerifySetting\": {\n\t\t\t\"id\": \"{{otpVerifySettingId}}\",\n\t\t\t\"maxResend\": 1,\n\t\t\t\"maxVerify\": 2,\n\t\t\t\"verifyFailMessage\": \"{{$randomLoremWords}}\",\n\t\t\t\"resendMessage\": \"{{$randomLoremWords}}\",\n\t\t\t\"notResendMessage\": \"{{$randomLoremWords}}\"\n\t\t}\n\t\t\n\t}\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/challenge/message/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"challenge",
												"message",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update {{functionType}} published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "簡訊驗證模板",
					"item": [
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d188f968-11da-4c7a-bb62-5c6243763477",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "查詢簡訊驗證模板",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7cc4bcd-6ca1-426b-bfd0-7e797974b3e3",
												"exec": [
													"const response = pm.response.json();",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"var dataId = 0;",
													"",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) {",
													"        dataLen = response.data.length;",
													"        dataId = response.data.id;",
													"    }",
													"    ",
													"    ",
													"    pm.environment.set(\"dataId\", dataId);",
													"    pm.expect(dataLen).not.equal(0);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8056571-b5fb-4aa7-b006-390b785e5cf4",
												"exec": [
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"SYS_CHALLENGE_SMS_MSG\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/sms-template/{{issuerBankId}}",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"sms-template",
												"{{issuerBankId}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d188f968-11da-4c7a-bb62-5c6243763477",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "更新簡訊驗證模板",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"auditId: \" + dataId);",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													"pm.environment.set(\"functionType\", \"SYS_CHALLENGE_SMS_MSG\");",
													"pm.environment.set(\"expireMillis\", 70000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\" : \"{{dataId}}\",\n\t\"issuerBankId\" : \"{{issuerBankId}}\",\n\t\"expireMillis\" : \"{{expireMillis}}\",\n\t\"verifyMessage\": \"{{$randomLoremSentence}}\",\n\t\"exceedLimitMessage\": \"{{$randomLoremSentence}}\"\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/system-setting/sms-template/config",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"system-setting",
												"sms-template",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update {{functionType}} published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "User Account",
			"item": [
				{
					"name": "Create",
					"item": [
						{
							"name": "Login - User1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82ed01ea-f2fa-43f3-b8dd-3329612209d8",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);",
											"pm.environment.set(\"functionType\", \"USER_GROUP\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2ef2dd3d-3e57-4619-8204-a0d16b65a4c0",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "新增使用者",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "764b3f05-906d-4f0d-a563-5d3b20e9dd75",
										"exec": [
											"var dataId = 0;",
											"const response = pm.response.json();",
											"",
											"if (response.data !== undefined && response.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    var auditId = response.data.id;",
											"    dataId = response.data.id;",
											"    ",
											"} else if(response.data !== undefined && response.status !== undefined && response.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"        dataId = response.data.id;",
											"        ",
											"} else if (204 == response.status) {",
											"    console.error(response.message);",
											"}",
											"",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5d492e51-af1e-474c-ba95-6a8a6672d4b8",
										"exec": [
											"var random = Math.floor(Math.random() * (999999999999999 - 0)) + 0;",
											"var chipCard = Math.floor(Math.random() * (999999999999999 - 0)) + 0;",
											"pm.globals.set(\"account\", \"account\" + random);",
											"pm.globals.set(\"chipCard\", chipCard);",
											"",
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"USER_ACCOUNT\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\t\"issuerBankId\": {{issuerBankId}},\n        \"account\": \"{{account}}\",\n        \"name\": \"string\",\n        \"department\": \"string\",\n        \"phone\": \"string\",\n        \"ext\": \"string\",\n        \"emai\": \"string\",\n        \"chipCardNumber\": \"{{chipCard}}\"\n    }"
								},
								"url": {
									"raw": "{{portal-url}}/auth/account-management/user/create",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"account-management",
										"user",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "500674dd-c2ab-4931-8855-ed7545904c31",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"var auditId = 0;",
											"",
											"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
											"console.log(\"identifySymbol: \" + identifySymbol);",
											"if(identifySymbol.length > 0) {",
											"    for(var i = 0; i < len; i++) {",
											"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
											"           ",
											"        auditId = response.data[i].auditId;",
											"        break;",
											"    }    ",
											"} else {",
											"    auditId = response.data[0].auditId;",
											"}",
											"pm.environment.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    ",
											"    if(identifySymbol !== \"\") {",
											"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
											"    }",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Create Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
										"exec": [
											"pm.test(\"Signing Create Approve completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "500674dd-c2ab-4931-8855-ed7545904c31",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Query",
					"item": [
						{
							"name": "查詢使用者",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3307fc12-b12f-4cf9-9bb3-62dd04547691",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"rawDataId\", response.data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"page\": 1, \n    \"pageSize\":20,\n    \"issuerBankId\": {{issuerBankId}},\n    \"account\": \"{{account}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/account-management/user/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"account-management",
										"user",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update",
					"item": [
						{
							"name": "Login - User1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "查詢使用者",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3307fc12-b12f-4cf9-9bb3-62dd04547691",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"rawDataId\", response.data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"page\": 1, \n    \"pageSize\":20,\n    \"issuerBankId\": {{issuerBankId}},\n    \"account\": \"{{account}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/account-management/user/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"account-management",
										"user",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "更新使用者",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"}",
											"",
											"pm.test(\"Update Request Completed.\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\" : {{rawDataId}}, \n    \"issuerBankId\" : {{issuerBankId}}, \n    \"name\": \"yoyoyoy\",\n    \"department\": \"d\",\n    \"phone\": \"0912345678\",\n    \"ext\": \"e\",\n    \"email\": \"e\",\n    \"account\": \"{{account}}\",\n    \"chipCardNumber\": \"{{chipCard}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/account-management/user/update",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"account-management",
										"user",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Update Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined) {",
											"    pm.globals.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"    console.log(\"dataId: \" + dataId);",
											"}",
											"",
											"pm.test(\"Sign Update Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Login - User1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "刪除使用者",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Delete Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": {{rawDataId}},\n\t\"issuerBankId\": {{issuerBankId}}\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/account-management/user/delete",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"account-management",
										"user",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Delete Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
										"exec": [
											"pm.test(\"Signing Delete Approve completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f21df0f7-5d05-4563-9304-10e99aa4b79d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c6c4bffd-8269-48a9-b15a-f4c627d6dcb0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Basic",
					"item": [
						{
							"name": "Login - Bank Amin - for test only",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Logout success\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0aadb0f9-c738-416f-a22f-7d0ac7e4a496",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{portal-url}}/auth/logout",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Card Reader 2",
					"item": [
						{
							"name": "Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68f85037-7c47-4d43-8ff7-505641e29828",
										"exec": [
											"const response = pm.response.json();",
											"",
											"console.log(response.fiscIcReader2List)",
											"",
											"pm.test(\"Card Reader 2\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.fiscIcReader2List).to.equal(\"CASTLES EZpad 0,CASTLES EZpad SAM 0\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{portal-url}}/ui-configuration",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"ui-configuration"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Bank Management",
			"item": [
				{
					"name": "Create Bank",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "31b3591a-89d8-4906-b1f6-fda2c3844309",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "新增銀行",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6f04218-f755-44a3-9264-557accd42871",
										"exec": [
											"",
											"var dataId = 0;",
											"",
											"const response = pm.response.json();",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    var auditId = response.data.id;",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"        dataId = response.data.id;",
											"}",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
										"exec": [
											"pm.environment.unset(\"variable_key\");",
											"var random = Math.floor(Math.random() * (10000 - 0)) + 90000;",
											"pm.environment.set(\"bigBankCode\", random);",
											"",
											"var bankName = \"BigBank\" + random;",
											"pm.environment.set(\"bigBankName\", bankName);",
											"",
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", bankName);",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"BANK_MANAGE\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"{{bigBankName}}\",\n\t\"code\":\"{{bigBankCode}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/issuer-bank/",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"issuer-bank",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "500674dd-c2ab-4931-8855-ed7545904c31",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"console.log(response.data)",
											"var auditId = 0;",
											"",
											"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
											"console.log(\"identifySymbol: \" + identifySymbol);",
											"if(identifySymbol.length > 0) {",
											"    for(var i = 0; i < len; i++) {",
											"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
											"           ",
											"        auditId = response.data[i].auditId;",
											"        break;",
											"    }    ",
											"} else {",
											"    auditId = response.data[0].auditId;",
											"}",
											"pm.globals.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    ",
											"    if(identifySymbol !== \"\") {",
											"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
											"    }",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Create Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    dataId = response.data.id;",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"}",
											"",
											"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "500674dd-c2ab-4931-8855-ed7545904c31",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Bank Admin",
					"item": [
						{
							"name": "Create Bank Admin",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6c53786c-6192-489b-bb3d-2a6051f43622",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "新增銀行管理員",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"",
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"subAuditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"var random = Math.floor(Math.random() * (10000 - 0)) + 90000;",
													"",
													"var bankAdminAccount = \"bankAdmin\" + random;",
													"var bankAdminUserName = \"bankUserName\" + random;",
													"",
													"pm.environment.set(\"bigBankAdminAccount\", bankAdminAccount);",
													"pm.environment.set(\"bigBankAdminUserName\", bankAdminUserName);",
													"",
													"",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"BANK_ADMIN\");",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"subIdentifySymbol\", bankAdminAccount);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"bankId\": \"{{dataId}}\",\n\t\"account\": \"{{bigBankAdminAccount}}\",\n\t\"userName\": \"{{bigBankAdminUserName}}\",\n\t\"chipCardNumber\": \"{{$guid}}\",\n\t\"email\": \"{{bigBankAdminUserName}}@big-bank.com\",\n\t\"phone\": \"02-882-5252\",\n\t\"ext\": \"0\",\n\t\"issuerBankId\": \"{{orgBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/bank-management/issuer-bank/admin",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"bank-management",
												"issuer-bank",
												"admin"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"console.log(response.data)",
													"var auditId = 0;",
													"",
													"var subIdentifySymbol = pm.environment.get(\"subIdentifySymbol\") || \"\";",
													"console.log(\"subIdentifySymbol: \" + subIdentifySymbol);",
													"if(subIdentifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(subIdentifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"pm.globals.set(\"subAuditId\", auditId)",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(subIdentifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(subIdentifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"subDataId\", response.data.id); ",
													"}",
													"",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{subAuditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"subAuditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Query Bank Admin",
							"item": [
								{
									"name": "查詢銀行管理員（多筆）",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d70162c6-7b58-4908-9509-d44b93940909",
												"exec": [
													"const response = pm.response.json();",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{portal-url}}/auth/bank-management/issuer-bank/admin-list/{{dataId}}",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"bank-management",
												"issuer-bank",
												"admin-list",
												"{{dataId}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Update Bank Admin",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "修改銀行管理員",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"subAuditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"subDataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"{{subDataId}}\",\n\t\"bankId\": \"{{dataId}}\",\n\t\"account\": \"{{bigBankAdminAccount}}update\",\n\t\"userName\": \"{{bigBankAdminUserName}}update\",\n\t\"chipCardNumber\": \"{{$guid}}\",\n\t\"email\": \"{{bigBankAdminUserName}}@big-bank.com\",\n\t\"phone\": \"02-882-5252\",\n\t\"ext\": \"0\",\n\t\"issuerBankId\": \"{{orgBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/bank-management/issuer-bank/admin/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"bank-management",
												"issuer-bank",
												"admin",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"subDataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"subDataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{subAuditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete Bank Admin",
							"item": [
								{
									"name": "Login - User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "刪除銀行管理員",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"subAuditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"subDataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Delete Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"{{subDataId}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/bank-management/issuer-bank/admin/delete",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"bank-management",
												"issuer-bank",
												"admin",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Delete Published Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
												"exec": [
													"pm.test(\"Signing Delete Approve completed\", function(){",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{subAuditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Query Bank",
					"item": [
						{
							"name": "查詢銀行（分頁）",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"page\": 1\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/issuer-banks",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"issuer-banks"
									]
								}
							},
							"response": []
						},
						{
							"name": "查詢銀行（單筆）",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b708c4b1-f7c4-469f-9398-be6188b0d922",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Query Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.environment.get(\"dataId\")).equal(response.data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/issuer-bank/{{dataId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"issuer-bank",
										"{{dataId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Bank",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "修改銀行",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"}",
											"",
											"pm.test(\"Update Request Completed.\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "73ce2843-2e3c-4f7c-832a-60f56999ec90",
										"exec": [
											"pm.environment.set(\"functionType\", \"BANK_MANAGE\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\" : \"{{dataId}}\", \n    \"issuerBankId\" : \"{{orgBankId}}\", \n    \"name\": \"{{bigBankName}}update\",\n    \"code\": \"{{bigBankCode}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/issuer-bank/update",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"issuer-bank",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Update Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined) {",
											"    pm.globals.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"    console.log(\"dataId: \" + dataId);",
											"}",
											"",
											"pm.test(\"Sign Update Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete Bank",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "刪除銀行",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4a31fef-1dbe-48fe-bcff-009af47be617",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"}",
											"",
											"pm.test(\"Delete Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"{{dataId}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/issuer-bank/delete",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"issuer-bank",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Delete Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03b8c7ef-56b2-4966-836a-f5c23b42cd3d",
										"exec": [
											"pm.test(\"Signing Delete Approve completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Query Bank Fee",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);",
											"pm.environment.set(\"functionType\", \"BANK_FEE\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "取得指定銀行費用設定",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = null;",
											"if(response.data !== undefined && response.status !== undefined ) {",
											"    dataId = response.data.id;",
											"    pm.environment.set(\"dataId\", dataId); // reset dataId",
											"    console.log(\"dataId:\" + dataId);",
											"} else {",
											"     console.error(\"dataId not found!\");",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\");",
											"pm.test(functionType + \" Query Completed.\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(null);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\" : \"{{issuerBankId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/fee",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"fee"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Bank Fee",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "更新費用",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\");",
											"pm.test(functionType + \" Update Completed.\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b1e5fc61-a2e4-44f2-80bd-41b10026fb7e",
										"exec": [
											"pm.environment.set(\"handlingFeeType\", 0);// 0=By Card, 1=By Month "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"id\": \"{{dataId}}\",\n    \"handlingFeeType\": \"{{handlingFeeType}}\",\n    \"chargePerCard\": {\n        \"feePerCard\": 0.0,\n        \"thresholdFee\": 0.02,\n        \"minimumFee\": 0.03\n    },\n    \"chargePerMonth\": {\n        \"feePerMonth\": 0.04\n    }\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/fee/update",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"fee",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Update Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined) {",
											"    pm.globals.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"    console.log(\"dataId: \" + dataId);",
											"}",
											"",
											"pm.test(\"Sign Update Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Query Bank Channel",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);",
											"pm.environment.set(\"functionType\", \"BANK_FEE\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ff8a41db-37d8-44a5-89d8-0da2811a63e6",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"BANK_CHANNEL\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "取得銀行交易管道設定",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = null;",
											"if(response.data !== undefined && response.status !== undefined ) {",
											"    dataId = response.data.id;",
											"    pm.environment.set(\"dataId\", dataId); // reset dataId",
											"    console.log(\"dataId:\" + dataId);",
											"} else {",
											"     console.error(\"dataId not found!\");",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\");",
											"pm.test(functionType + \" Query Completed.\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(null);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\" : \"{{issuerBankId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/trading-channel",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"trading-channel"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Bank Channel",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "31b3591a-89d8-4906-b1f6-fda2c3844309",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"BANK_CHANNEL\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "更新銀行交易管道設定",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6f04218-f755-44a3-9264-557accd42871",
										"exec": [
											"",
											"var dataId = 0;",
											"",
											"const response = pm.response.json();",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    var auditId = response.data.id;",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"        dataId = response.data.id;",
											"}",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"visaChannel\": true,\n    \"mastercardChannel\": true,\n    \"jcbChannel\": true\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/bank-management/trading-channel/update",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"bank-management",
										"trading-channel",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN2",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "500674dd-c2ab-4931-8855-ed7545904c31",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"console.log(response.data)",
											"var auditId = 0;",
											"",
											"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
											"console.log(\"identifySymbol: \" + identifySymbol);",
											"if(identifySymbol.length > 0) {",
											"    for(var i = 0; i < len; i++) {",
											"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
											"           ",
											"        auditId = response.data[i].auditId;",
											"        break;",
											"    }    ",
											"} else {",
											"    auditId = response.data[0].auditId;",
											"}",
											"pm.globals.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    ",
											"    if(identifySymbol !== \"\") {",
											"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
											"    }",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Create Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    dataId = response.data.id;",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"}",
											"",
											"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "500674dd-c2ab-4931-8855-ed7545904c31",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Permission",
			"item": [
				{
					"name": "你想得到的權限",
					"item": [
						{
							"name": "1. Login (fisc user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "555b9781-30e1-49db-a6bf-7896ec3dab0c",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ab5a4133-7f59-4643-96e1-0fa0abe80882",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"Permission\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{orgAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get User Permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "908234c9-beb3-4cdc-880a-dcdf00d0caa4",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/user/{{orgBankId}}/{{orgAdmin1}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"user",
										"{{orgBankId}}",
										"{{orgAdmin1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Get Bank Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3cace58f-ea92-4dd2-be0f-347d8e4c905f",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/bank/{{orgBankId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"bank",
										"{{orgBankId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Get Group Permissions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28bda1c2-cead-4d06-b47e-680dc1e4cb7e",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/{{orgBankId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"{{orgBankId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Get Group Members",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5c05427-5096-42df-b7c7-9838a678a5d0",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"page\" : 1,\n\t\"pageSize\" : 2\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/member/{{orgBankId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"member",
										"{{orgBankId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cefb21ac-6e4a-4a4f-8a7d-616e99f0da17",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55dcd847-9842-466f-ae4c-df9c8aefeb0b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "建立 customized的銀行群組",
					"item": [
						{
							"name": "1. Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"USER_GROUP\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Create Bank Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4668e8c0-cd45-4772-a157-a2341d6e9d7d",
										"exec": [
											"const response = pm.response.json();",
											"",
											"var dataId = 0;",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    var auditId = response.data.id;",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"        dataId = response.data.id;",
											"}",
											"",
											"// Expect Result",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"    pm.expect(response.data).not.equal(null);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c133b2bd-b0f1-4453-971a-b2fab88ffb3f",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"// 設定一個在審核可以用來識別的字串",
											"var identifySymbol = \"bankGrp_\"+n;",
											"",
											"pm.environment.set(\"identifySymbol\", identifySymbol);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"issuerBankId\" : \"{{issuerBankId}}\",\n   \"name\" : \"{{identifySymbol}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/bank/create",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"bank",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Login (bank admin2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d2448ff-e168-48d7-9e3f-5159b689c4a6",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5b7878-ce21-4901-a308-5e79a34b03cd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin2}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e321859-f65a-4c76-9215-6f5b6b149b63",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"var auditId = 0;",
											"",
											"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
											"console.log(\"identifySymbol: \" + identifySymbol);",
											"if(identifySymbol.length > 0) {",
											"    for(var i = 0; i < len; i++) {",
											"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
											"           ",
											"        auditId = response.data[i].auditId;",
											"        break;",
											"    }    ",
											"} else {",
											"    auditId = response.data[0].auditId;",
											"}",
											"pm.environment.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    ",
											"    if(identifySymbol !== \"\") {",
											"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
											"    }",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Auditing - Signing Create Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f91dc6ab-79d8-4cb7-a912-2206bd5c040e",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    dataId = response.data.id;",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"}",
											"console.log(response.data.id);",
											"console.log(dataId);",
											"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
											"    if (!response.data.id) {",
											"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
											"    } else {",
											"        pm.response.to.have.status(200);",
											"        pm.expect(dataId).not.equal(0);",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Create bank group published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "334b2395-3a64-4184-a3f9-dcca234ec2cb",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "1. Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "9. Permission - Get Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ca91a34-88a7-4dfc-86f4-5962fa6b369b",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Update Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});",
											"",
											"",
											"// 驗證預設應該擁有的權限",
											"pm.test(\"MODULE_REPORT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleReport).to.be.true;",
											"});",
											"pm.test(\"RT_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.reportQuery).to.be.true;",
											"});",
											"pm.test(\"MODULE_TX - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleTx).to.be.true;",
											"});",
											"pm.test(\"TX_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.txQuery).to.be.true;",
											"});",
											"pm.test(\"MODULE_CARD - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleCard).to.be.true;",
											"});",
											"pm.test(\"CARD_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.cardQuery).to.be.true;",
											"});",
											"pm.test(\"CARD_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.cardModify).to.be.true;",
											"});",
											"pm.test(\"CARD_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.cardAudit).to.be.true;",
											"});",
											"pm.test(\"MODULE_RISK_BLACK_LIST - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleRiskBlackList).to.be.true;",
											"});",
											"pm.test(\"BLACK_LIST_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.blackListQuery).to.be.true;",
											"});",
											"pm.test(\"BLACK_LIST_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.blackListModify).to.be.true;",
											"});",
											"pm.test(\"BLACK_LIST_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.blackListAudit).to.be.true;",
											"});",
											"pm.test(\"MODULE_RISK_WHITE_LIST - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleRiskWhiteList).to.be.true;",
											"});",
											"pm.test(\"WHITE_LIST_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.whiteListQuery).to.be.true;",
											"});",
											"pm.test(\"WHITE_LIST_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.whiteListModify).to.be.true;",
											"});",
											"pm.test(\"WHITE_LIST_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.whiteListAudit).to.be.true;",
											"});",
											"pm.test(\"MODULE_RISK_CONTROL - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleRiskControl).to.be.true;",
											"});",
											"pm.test(\"RISK_CONTROL_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.riskControlQuery).to.be.true;",
											"});",
											"pm.test(\"RISK_CONTROL_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.riskControlModify).to.be.true;",
											"});",
											"pm.test(\"RISK_CONTROL_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.riskControlAudit).to.be.true;",
											"});",
											"pm.test(\"MODULE_USER_GROUP - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleUserGroup).to.be.true;",
											"});",
											"pm.test(\"USER_GROUP_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.userGroupQuery).to.be.true;",
											"});",
											"pm.test(\"USER_GROUP_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.userGroupModify).to.be.true;",
											"});",
											"pm.test(\"USER_GROUP_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.userGroupAudit).to.be.true;",
											"});",
											"pm.test(\"MODULE_USER_UNLOCK - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleUserUnlock).to.be.true;",
											"});",
											"pm.test(\"UNLOCK_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.unlockQuery).to.be.true;",
											"});",
											"pm.test(\"UNLOCK_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.unlockModify).to.be.true;",
											"});",
											"pm.test(\"UNLOCK_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.unlockAudit).to.be.true;",
											"});",
											"pm.test(\"MODULE_USER_AUDIT_LOG - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleUserAuditLog).to.be.true;",
											"});",
											"pm.test(\"AUDIT_LOG_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.auditLogQuery).to.be.true;",
											"});",
											"pm.test(\"MODULE_BANK_LOGO - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleBankLogo).to.be.true;",
											"});",
											"",
											"pm.test(\"BANK_LOGO_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankLogoQuery).to.be.true;",
											"});",
											"pm.test(\"BANK_LOGO_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankLogoModify).to.be.true;",
											"});",
											"pm.test(\"BANK_LOGO_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankLogoModify).to.be.true;",
											"});",
											"",
											"pm.test(\"MODULE_SYS_CHALLENGE_VIEW - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysChallengeView).to.be.true;",
											"});",
											"pm.test(\"SYS_CHALLENGE_VIEW_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysChallengeViewQuery).to.be.true;",
											"});",
											"pm.test(\"SYS_CHALLENGE_VIEW_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysChallengeViewModify).to.be.true;",
											"});",
											"pm.test(\"SYS_CHALLENGE_VIEW_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysChallengeViewAudit).to.be.true;",
											"});",
											"pm.test(\"MODULE_SYS_CHALLENGE_SMS_MSG - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysChallengeSmsMsg).to.be.true;",
											"});",
											"pm.test(\"SYS_CHALLENGE_SMS_MSG_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysChallengeSmsMsgQuery).to.be.true;",
											"});",
											"pm.test(\"SYS_CHALLENGE_SMS_MSG_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysChallengeSmsMsgModify).to.be.true;",
											"});",
											"pm.test(\"SYS_CHALLENGE_SMS_MSG_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysChallengeSmsMsgAudit).to.be.true;",
											"});",
											"",
											"",
											"// 驗證不應該擁有的權限",
											"pm.test(\" MODULE_BANK_MANAGE - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleBankManage).to.be.false;",
											"});",
											"pm.test(\" BANK_MANAGE_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankManageQuery).to.be.false;",
											"});",
											"pm.test(\" BANK_MANAGE_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankManageModify).to.be.false;",
											"});",
											"pm.test(\" BANK_MANAGE_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankManageAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_BANK_CHANNEL - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleBankChannel).to.be.false;",
											"});",
											"pm.test(\" BANK_CHANNEL_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankChannelQuery).to.be.false;",
											"});",
											"pm.test(\" BANK_CHANNEL_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankChannelModify).to.be.false;",
											"});",
											"pm.test(\" BANK_CHANNEL_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankChannelAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_BANK_FEE - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleBankFee).to.be.false;",
											"});",
											"pm.test(\" BANK_FEE_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankFeeQuery).to.be.false;",
											"});",
											"pm.test(\" BANK_FEE_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankFeeModify).to.be.false;",
											"});",
											"pm.test(\" BANK_FEE_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.bankFeeAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_SYS_BIN_RANGE - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysBinRange).to.be.false;",
											"});",
											"pm.test(\" SYS_BIN_RANGE_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysBinRangeQuery).to.be.false;",
											"});",
											"pm.test(\" SYS_BIN_RANGE_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysBinRangeModify).to.be.false;",
											"});",
											"pm.test(\" SYS_BIN_RANGE_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysBinRangeAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_SYS_ACS_OPERATOR_ID - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysAcsOperatorId).to.be.false;",
											"});",
											"pm.test(\" SYS_ACS_OPERATOR_ID_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysAcsOperatorIdQuery).to.be.false;",
											"});",
											"pm.test(\" SYS_ACS_OPERATOR_ID_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysAcsOperatorIdModify).to.be.false;",
											"});",
											"pm.test(\" SYS_ACS_OPERATOR_ID_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysAcsOperatorIdAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_SYS_TIMEOUT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysTimeout).to.be.false;",
											"});",
											"pm.test(\" SYS_TIMEOUT_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysTimeoutQuery).to.be.false;",
											"});",
											"pm.test(\" SYS_TIMEOUT_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysTimeoutModify).to.be.false;",
											"});",
											"pm.test(\" SYS_TIMEOUT_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysTimeoutAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_SYS_ERROR_CODE - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysErrorCode).to.be.false;",
											"});",
											"pm.test(\" SYS_ERROR_CODE_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysErrorCodeQuery).to.be.false;",
											"});",
											"pm.test(\" SYS_ERROR_CODE_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysErrorCodeModify).to.be.false;",
											"});",
											"pm.test(\" SYS_ERROR_CODE_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysErrorCodeAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_SYS_KEY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysKey).to.be.false;",
											"});",
											"pm.test(\" SYS_KEY_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysKeyQuery).to.be.false;",
											"});",
											"pm.test(\" SYS_KEY_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysKeyModify).to.be.false;",
											"});",
											"pm.test(\" SYS_KEY_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysKeyAudit).to.be.false;",
											"});",
											"pm.test(\" MODULE_CERT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleCert).to.be.false;",
											"});",
											"pm.test(\" CERT_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.certQuery).to.be.false;",
											"});",
											"pm.test(\" CERT_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.certModify).to.be.false;",
											"});",
											"pm.test(\" CERT_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.certAudit).to.be.false;",
											"});",
											"pm.test(\" ACCESS_MULTI_BANK - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.accessMultiBank).to.be.false;",
											"});",
											"pm.test(\"MODULE_SYS_CARD_LOGO - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.moduleSysCardLogo).to.be.false;",
											"});",
											"pm.test(\"SYS_CARD_LOGO_QUERY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysCardLogoQuery).to.be.false;",
											"});",
											"pm.test(\"SYS_CARD_LOGO_MODIFY - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysCardLogoModify).to.be.false;",
											"});",
											"pm.test(\"SYS_CARD_LOGO_AUDIT - Bank Customized Group Permission Check\", function(){    ",
											"    pm.expect(response.data.sysCardLogoAudit).to.be.false;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/{{dataId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"{{dataId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "新增群組使用者",
					"item": [
						{
							"name": "1. Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"// pm.environment.set(\"identifySymbol\", \"\"); 延續建立群組的測試，取得group name",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"ACCOUNT_GROUP\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\"); 延續建立群組的測試，取得groupId",
											"// 相關子模組id",
											"// pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group Member - Add",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4a9eed8-e94f-4c93-b7e4-bca86a6dbe28",
										"exec": [
											"var dataId = 0;",
											"",
											"const response = pm.response.json();",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
											"response.data.id !== undefined) {",
											"    pm.environment.set(\"auditId\", response.data.id); ",
											"    var auditId = response.data.id;",
											"    dataId = response.data.id;",
											"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"        dataId = response.data.id;",
											"}",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"issuerBankId\": {{issuerBankId}},\n    \"account\": \"{{bankAdmin1}}\",\n    \"groupId\": \"{{dataId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/member/create",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"member",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login (bank admin2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d2448ff-e168-48d7-9e3f-5159b689c4a6",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5b7878-ce21-4901-a308-5e79a34b03cd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin2}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a287fff2-9440-490b-9f8f-d66e2b8efb3b",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"var auditId = 0;",
											"",
											"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
											"console.log(\"identifySymbol: \" + identifySymbol);",
											"if(identifySymbol.length > 0) {",
											"    for(var i = 0; i < len; i++) {",
											"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
											"           ",
											"        auditId = response.data[i].auditId;",
											"        break;",
											"    }    ",
											"} else {",
											"    auditId = response.data[0].auditId;",
											"}",
											"pm.environment.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    ",
											"    if(identifySymbol !== \"\") {",
											"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
											"    }",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Create Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d15593f3-479d-4a4f-9385-3a04049a83ce",
										"exec": [
											"pm.test(\"Signing Create Approve completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Update permission published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7820116-1bf5-4c89-9c7f-33c8dc2cc754",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"// pm.environment.set(\"identifySymbol\", \"\"); 延續建立群組的測試，取得group name",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"ACCOUNT\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\"); 延續建立群組的測試，取得groupId",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "User - Get Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ca91a34-88a7-4dfc-86f4-5962fa6b369b",
										"exec": [
											"const response = pm.response.json();",
											"",
											"var reportQryBoolean = pm.environment.get(\"reportQryBoolean\");",
											"",
											"var groupName = pm.environment.get(\"identifySymbol\");",
											"pm.test(\"Update Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"    ",
											"    var groupCollection = response.data[0].group;",
											"    var isGroupExist = groupCollection.indexOf(groupName) >= 0 ? true : false;",
											"    pm.expect(isGroupExist).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"page\": 1,\n    \"pageSize\": 4,\n    \"issuerBankId\": {{issuerBankId}},\n    \"account\": \"{{bankAdmin1}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/account-management/user/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"account-management",
										"user",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4414b570-e674-48ad-912b-d4f789102c53",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a6ba1c39-82a5-4c13-b3ad-337eb672598b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "更新群組權限",
					"item": [
						{
							"name": "1. Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"// pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"Permission\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"// pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Update Group Permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4a9eed8-e94f-4c93-b7e4-bca86a6dbe28",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"issuerBankId\" : {{issuerBankId}},\n\t\"groupId\" : {{dataId}},\n    \"moduleReport\": true,\n    \"reportQuery\": true,\n    \"moduleTx\": true,\n    \"txQuery\": true,\n    \"moduleCard\": true,\n    \"cardQuery\": true,\n    \"cardModify\": false,\n    \"cardAudit\": false,\n    \"moduleRiskBlackList\": true,\n    \"blackListQuery\": true,\n    \"blackListModify\": true,\n    \"blackListAudit\": true,\n    \"moduleRiskWhiteList\": true,\n    \"whiteListQuery\": true,\n    \"whiteListModify\": true,\n    \"whiteListAudit\": true,\n    \"moduleRiskControl\": true,\n    \"riskControlQuery\": true,\n    \"riskControlModify\": true,\n    \"riskControlAudit\": true,\n    \"moduleUserGroup\": true,\n    \"userGroupQuery\": true,\n    \"userGroupModify\": true,\n    \"userGroupAudit\": true,\n    \"moduleUserUnlock\": true,\n    \"unlockQuery\": true,\n    \"unlockModify\": true,\n    \"unlockAudit\": true,\n    \"moduleUserAuditLog\": true,\n    \"auditLogQuery\": true,\n    \"moduleBankManage\": false,\n    \"bankManageQuery\": false,\n    \"bankManageModify\": false,\n    \"bankManageAudit\": false,\n    \"moduleBankLogo\": true,\n    \"bankLogoQuery\": false,\n    \"bankLogoModify\": false,\n    \"bankLogoAudit\": false,\n    \"moduleBankChannel\": false,\n    \"bankChannelQuery\": false,\n    \"bankChannelModify\": false,\n    \"bankChannelAudit\": false,\n    \"moduleBankFee\": false,\n    \"bankFeeQuery\": false,\n    \"bankFeeModify\": false,\n    \"bankFeeAudit\": false,\n    \"moduleSysBinRange\": false,\n    \"sysBinRangeQuery\": false,\n    \"sysBinRangeModify\": false,\n    \"sysBinRangeAudit\": false,\n    \"moduleSysCardLogo\": false,\n    \"sysCardLogoQuery\": false,\n    \"sysCardLogoModify\": false,\n    \"sysCardLogoAudit\": false,\n    \"moduleSysChallengeView\": true,\n    \"sysChallengeViewQuery\": true,\n    \"sysChallengeViewModify\": true,\n    \"sysChallengeViewAudit\": true,\n    \"moduleSysChallengeSmsMsg\": true,\n    \"sysChallengeSmsMsgQuery\": true,\n    \"sysChallengeSmsMsgModify\": true,\n    \"sysChallengeSmsMsgAudit\": true,\n    \"moduleSysAcsOperatorId\": true,\n    \"sysAcsOperatorIdQuery\": false,\n    \"sysAcsOperatorIdModify\": false,\n    \"sysAcsOperatorIdAudit\": false,\n    \"moduleSysTimeout\": false,\n    \"sysTimeoutQuery\": false,\n    \"sysTimeoutModify\": false,\n    \"sysTimeoutAudit\": false,\n    \"moduleSysErrorCode\": false,\n    \"sysErrorCodeQuery\": false,\n    \"sysErrorCodeModify\": false,\n    \"sysErrorCodeAudit\": false,\n    \"moduleSysKey\": false,\n    \"sysKeyQuery\": false,\n    \"sysKeyModify\": false,\n    \"sysKeyAudit\": false,\n    \"moduleCert\": false,\n    \"certQuery\": false,\n    \"certModify\": false,\n    \"certAudit\": false,\n    \"accessMultiBank\": false,\n    \"moduleHealthCheck\": false,\n    \"healthCheckQuery\": false,\n    \"moduleBankOtpSending\": true,\n    \"bankOtpSendingQuery\": true,\n    \"bankOtpSendingModify\": true,\n    \"bankOtpSendingAudit\": true\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/update",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Login (bank admin2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d2448ff-e168-48d7-9e3f-5159b689c4a6",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5b7878-ce21-4901-a308-5e79a34b03cd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin2}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a287fff2-9440-490b-9f8f-d66e2b8efb3b",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"var auditId = 0;",
											"",
											"// 因為identifySymbol是Group Name 而非使用者權限的識別，所以這裡不判斷identifySymbol而是直接取auditId",
											"auditId = response.data[0].auditId;",
											"pm.environment.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Auditing - Signing Create Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d15593f3-479d-4a4f-9385-3a04049a83ce",
										"exec": [
											"pm.test(\"Signing Create Approve completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Update permission published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7820116-1bf5-4c89-9c7f-33c8dc2cc754",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "8. Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"// pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"// pm.environment.set(\"functionType\", \"Permission\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"// pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "9. Get Group Permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08965756-7425-4eb1-8b19-8be30462603e",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Update Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"    pm.expect(response.data.moduleSysAcsOperatorId).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/{{dataId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"{{dataId}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "20123415-a234-4578-8457-16b9a69a1e87",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7e41b526-6ea6-4fd2-9747-bb539b8ee4eb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "移除群組使用者",
					"item": [
						{
							"name": "Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"// pm.environment.set(\"identifySymbol\", \"\"); 延續建立群組的測試，取得group name",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"ACCOUNT_GROUP\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\"); 延續建立群組的測試，取得groupId",
											"// 相關子模組id",
											"// pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group Member - Remove",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4a9eed8-e94f-4c93-b7e4-bca86a6dbe28",
										"exec": [
											"pm.test(\"Delete Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"issuerBankId\": {{issuerBankId}},\n    \"account\": \"{{bankAdmin1}}\",\n    \"groupId\": \"{{dataId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/member/delete",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"member",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login (bank admin2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d2448ff-e168-48d7-9e3f-5159b689c4a6",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5b7878-ce21-4901-a308-5e79a34b03cd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin2}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a287fff2-9440-490b-9f8f-d66e2b8efb3b",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"var auditId = 0;",
											"",
											"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
											"console.log(\"identifySymbol: \" + identifySymbol);",
											"if(identifySymbol.length > 0) {",
											"    for(var i = 0; i < len; i++) {",
											"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
											"           ",
											"        auditId = response.data[i].auditId;",
											"        break;",
											"    }    ",
											"} else {",
											"    auditId = response.data[0].auditId;",
											"}",
											"pm.environment.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    ",
											"    if(identifySymbol !== \"\") {",
											"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
											"    }",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing - Signing Remove Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d15593f3-479d-4a4f-9385-3a04049a83ce",
										"exec": [
											"pm.test(\"Signing Create Approve completed\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Update permission published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7820116-1bf5-4c89-9c7f-33c8dc2cc754",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"// pm.environment.set(\"identifySymbol\", \"\"); 延續建立群組的測試，取得group name",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"ACCOUNT\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\"); 延續建立群組的測試，取得groupId",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "User - Get Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ca91a34-88a7-4dfc-86f4-5962fa6b369b",
										"exec": [
											"const response = pm.response.json();",
											"",
											"var reportQryBoolean = pm.environment.get(\"reportQryBoolean\");",
											"",
											"var groupName = pm.environment.get(\"identifySymbol\");",
											"pm.test(\"Update Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"    ",
											"    var groupCollection = response.data[0].group;",
											"    var isGroupNotExist = groupCollection.indexOf(groupName) < 0 ? true : false;",
											"    pm.expect(isGroupNotExist).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"page\": 1,\n    \"pageSize\": 4,\n    \"issuerBankId\": {{issuerBankId}},\n    \"account\": \"{{bankAdmin1}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/account-management/user/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"account-management",
										"user",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "更新 customized的銀行群組",
					"item": [
						{
							"name": "1. Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"//pm.environment.set(\"identifySymbol\", \"\"); 延續前面測試腳本 group name",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"USER_GROUP\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\"); 延續之前腳本 group id",
											"// 相關子模組id",
											"// pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Update Bank Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5682e853-a31d-49e8-a5eb-4a8dd463a2ce",
										"exec": [
											"const response = pm.response.json();",
											"",
											"// Expect Result",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fc90f653-757c-4e57-934f-082c3236d13a",
										"exec": [
											"var groupName = pm.environment.get(\"identifySymbol\"); ",
											"groupName = \"UP_\" + groupName;",
											"",
											"pm.environment.set(\"identifySymbol\", groupName);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"issuerBankId\" : \"{{issuerBankId}}\",\n\t\"groupId\" : {{dataId}},\n\t\"name\" : \"{{identifySymbol}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/bank/update",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"bank",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Login (bank admin2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d2448ff-e168-48d7-9e3f-5159b689c4a6",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5b7878-ce21-4901-a308-5e79a34b03cd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin2}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeb08c5e-e223-45cd-83a7-cead93ad7141",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"var auditId = 0;",
											"",
											"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
											"console.log(\"identifySymbol: \" + identifySymbol);",
											"if(identifySymbol.length > 0) {",
											"    for(var i = 0; i < len; i++) {",
											"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
											"           ",
											"        auditId = response.data[i].auditId;",
											"        break;",
											"    }    ",
											"} else {",
											"    auditId = response.data[0].auditId;",
											"}",
											"pm.environment.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    ",
											"    if(identifySymbol !== \"\") {",
											"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
											"    }",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Auditing - Signing Update Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "730ea777-3e4b-4aad-9e5b-b84c7ae95a74",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined) {",
											"    pm.globals.set(\"dataId\", response.data.id); ",
											"    dataId = response.data.id;",
											"    console.log(\"dataId: \" + dataId);",
											"}",
											"",
											"pm.test(\"Sign Update Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(dataId).not.equal(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Update bank group published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af3c2cb1-fcf7-488a-9ff5-2360139bd28f",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0922bfd4-a7c1-40de-ad41-c11738bab005",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cb581393-1560-4435-85ea-01f6bd462fed",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "刪除 customized的銀行群組",
					"item": [
						{
							"name": "1. Login (bank admin1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2850d808-fb95-4fbe-96db-0714a4c47b0b",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9b1dcc-80d5-4e00-ac85-241770c61de3",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"// pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"USER_GROUP\");",
											"",
											"// 主要資料id",
											"// pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"// pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get Bank Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0cc4cec1-26d7-4a39-ab54-e5aad5a9d2f8",
										"exec": [
											"const response = pm.response.json();",
											"",
											"const dataAry = response.data;",
											"for (var i = 0; i < dataAry.length; i++){",
											"    if (dataAry[i].name === 'BIG_Group_UPDATE') {",
											"        postman.setEnvironmentVariable(\"groupId\", dataAry[i].groupId);",
											"    }",
											"}",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/bank/{{issuerBankId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"bank",
										"{{issuerBankId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Delete Bank Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a27a93ae-191d-486a-a82e-97d775a42771",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"issuerBankId\" : \"{{issuerBankId}}\",\n\t\"groupId\" : {{dataId}}\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/permission/group/bank/delete",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"group",
										"bank",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Login (bank admin2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d2448ff-e168-48d7-9e3f-5159b689c4a6",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5b7878-ce21-4901-a308-5e79a34b03cd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin2}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Auditing - Query All with\bout self",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b149f6ec-213e-4ec4-b80a-e05c1b3664e0",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"var auditId = 0;",
											"",
											"auditId = response.data[0].auditId;",
											"pm.environment.set(\"auditId\", auditId)",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query auditing list completed\", function(){",
											"    pm.response.to.have.status(200);",
											"",
											"    pm.expect(auditId).not.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Auditing - Signing Delete Published",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f2f5ef32-b534-4754-9ab6-dbde4b1c1e3b",
										"exec": [
											"const response = pm.response.json();",
											"var dataId = 0;",
											"",
											"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
											"response.data.id !== undefined){",
											"    dataId = response.data.id;",
											"    pm.environment.set(\"dataId\", response.data.id); ",
											"}",
											"console.log(response.data.id);",
											"console.log(dataId);",
											"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
											"    if (!response.data.id) {",
											"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
											"    } else {",
											"        pm.response.to.have.status(200);",
											"        pm.expect(dataId).not.equal(0);",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{issuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"Delete bank group published\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/signing",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"signing"
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Auditing List - Without Insert one",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38163f4a-e90b-4f36-a3bd-7076358f7a81",
										"exec": [
											"const response = pm.response.json();",
											"var len = response.data.length;",
											"const identifySymbol = pm.environment.get(\"identifySymbol\");",
											"",
											"var isAuditItemStillThere = false;",
											"var auditId = pm.environment.get(\"auditId\"); ",
											"",
											"for(var i = 0; i < len; i++) {",
											"    if(response.data[0].auditId !== auditId) continue;",
											"    ",
											"    isAuditItemStillThere = true;",
											"}",
											"pm.test(\"Insert Request Removed\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isAuditItemStillThere).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": {{issuerBankId}},\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/auditing/list",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"auditing",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "多銀行的權限",
					"item": [
						{
							"name": "1. Login (fisc user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8798c906-7975-4be5-818a-efd45b8d68da",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "{{bankAdmin1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get User Permission (取自己銀行的權限)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81ecef9a-c64f-4e60-8d97-dd330000618e",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(response.status).is.to.equal(0);",
											"    pm.expect(response.message).is.to.equal(\"success\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/user/{{issuerBankId}}/{{bankAdmin1}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"user",
										"{{issuerBankId}}",
										"{{bankAdmin1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Get User Permission (取他家銀行的權限)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68bb1350-dbc0-4d2b-ab1a-7fba411c6601",
										"exec": [
											"const response = pm.response.json();",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(403);",
											"    pm.expect(response.status).is.to.equal(403);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-csrf-token",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/permission/user/{{orgBankId}}/{{orgAdmin1}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"permission",
										"user",
										"{{orgBankId}}",
										"{{orgAdmin1}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"description": "Edward say this is a user Permision"
		},
		{
			"name": "Report",
			"item": [
				{
					"name": "系統監控",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "系統監控",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 && response.data !== null && response.data.acsIntegrator !== null && response.data.acsKernel !== null) {",
											"    isValid  = true;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/dashboard/system-health",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"dashboard",
										"system-health"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "報表查詢",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "各交易狀態統計數值報表 日報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"startDate\": \"2019-12-03\",\n    \"endDate\": \"2019-12-03\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/transaction-status",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"transaction-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "各交易狀態統計數值報表 月報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"startDate\": \"2019-12\",\n    \"endDate\": \"2019-12\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/transaction-status",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"transaction-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "各交易狀態統計報表-detail 日報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"id\": 1,\n    \"startDate\": \"2019-11-28\",\n    \"endDate\": \"2019-11-28\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/transaction-status/detail",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"transaction-status",
										"detail"
									]
								}
							},
							"response": []
						},
						{
							"name": "各交易狀態統計報表-detail 月報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"id\": 1,\n    \"startDate\": \"2019-12\",\n    \"endDate\": \"2019-12\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/transaction-status/detail",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"transaction-status",
										"detail"
									]
								}
							},
							"response": []
						},
						{
							"name": "人工彈性授權統計 日報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"startDate\": \"2019-12-03\",\n    \"endDate\": \"2019-12-03\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/attempt-auth",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"attempt-auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "人工彈性授權統計 月報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"startDate\": \"2019-12\",\n    \"endDate\": \"2019-12\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/attempt-auth",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"attempt-auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "失敗原因統計 日報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"startDate\": \"2019-12-03\",\n    \"endDate\": \"2019-12-03\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/error-reason",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"error-reason"
									]
								}
							},
							"response": []
						},
						{
							"name": "失敗原因統計 月報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											"var isValid = false;",
											"if(response.status===0 ) {",
											"    isValid  = response.status === 0;",
											"}",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(isValid).to.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"startDate\": \"2019-12\",\n    \"endDate\": \"2019-12\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/statistic-report/error-reason",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"statistic-report",
										"error-reason"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "瀏覽器異常紀錄",
					"item": [
						{
							"name": "Login - User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "瀏覽器異常紀錄 日報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"issuerBankId\" : 1,\n\t\"startDate\" : \"2019-12-03\",\n\t\"endDate\" : \"2019-12-03\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/browser-error-log",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"browser-error-log"
									]
								}
							},
							"response": []
						},
						{
							"name": "瀏覽器異常紀錄 月報表",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d70162c6-7b58-4908-9509-d44b93940909",
										"exec": [
											"const response = pm.response.json();",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"issuerBankId\" : 1,\n\t\"startDate\" : \"2019-12\",\n\t\"endDate\" : \"2019-12\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/report/browser-error-log",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"report",
										"browser-error-log"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Cardholder",
			"item": [
				{
					"name": "查詢持卡人",
					"item": [
						{
							"name": "Login - User1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82ed01ea-f2fa-43f3-b8dd-3329612209d8",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);",
											"pm.environment.set(\"functionType\", \"USER_GROUP\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2ef2dd3d-3e57-4619-8204-a0d16b65a4c0",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "查詢持卡人",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "764b3f05-906d-4f0d-a563-5d3b20e9dd75",
										"exec": [
											"const response = pm.response.json();",
											"",
											"if(response.data !== undefined && response.status !== undefined ) {",
											"    cardhoderName = response.data.name;",
											"    console.log(\"cardHolderName:\" + response.data.name)",
											"} ",
											"",
											"pm.test(\"Create Request Completed\", function(){",
											"    pm.response.to.have.status(200);",
											"    pm.expect(cardhoderName).not.equal(\"\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5d492e51-af1e-474c-ba95-6a8a6672d4b8",
										"exec": [
											"",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"identityNumber\":\"A123456789\",\n\t\"issuerBankId\": \"1\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/cardholder/records",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"cardholder",
										"records"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "人工彈性授權",
					"item": [
						{
							"name": "Create",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82ed01ea-f2fa-43f3-b8dd-3329612209d8",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2ef2dd3d-3e57-4619-8204-a0d16b65a4c0",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "取得目前的人工彈性授權設定",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"var isValid=false;",
													"const response = pm.response.json();",
													"if(response.data !== undefined) {",
													"    isValid = response.data.triesPermittedLimit !== undefined",
													"    isValid = response.data.currencyList.length !== 0",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isValid).to.equal(true);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"url": {
											"raw": "{{portal-url}}/auth/cardholder/attempt-auth/{{issuerBankId}}",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"cardholder",
												"attempt-auth",
												"{{issuerBankId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "人工彈性授權設定",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f6f04218-f755-44a3-9264-557accd42871",
												"exec": [
													"",
													"var dataId = 0;",
													"",
													"const response = pm.response.json();",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    var auditId = response.data.id;",
													"    dataId = response.data.id;",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"        dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Create Request Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6b8d75c-ab54-45bf-a59f-c7119738a276",
												"exec": [
													"var random = Math.floor(Math.random() * (10000 - 0)) + 90000;",
													"// 人工彈性授權PAN id",
													"pm.environment.set(\"attemptPanId\", 1);",
													"// 人工彈性授權銀行id",
													"pm.environment.set(\"attemptAuthIssuerBankId\", 1);",
													"// 人工彈性授權授權金額",
													"pm.environment.set(\"attemptMaxMoney\", random);",
													"",
													"",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"ATTEMPT\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"panId\": \"{{attemptPanId}}\",\n\t\"maxMoney\": \"{{attemptMaxMoney}}\",\n\t\"currency\": \"901\",\n\t\"triesPermitted\": 1,\n\t\"issuerBankId\": \"{{attemptAuthIssuerBankId}}\",\n\t\"version\": 2\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/cardholder/attempt-auth",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"cardholder",
												"attempt-auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"console.log(response.data)",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data[0].auditId;",
													"}",
													"pm.globals.set(\"auditId\", auditId)",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Create Published Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2615cf4c-93b1-4f69-8fb5-86888a90d0c4",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    dataId = response.data.id;",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"}",
													"console.log(response.data.id);",
													"console.log(dataId);",
													"pm.test(\"Signing Create Approve completed. Data Stored.\", function(){",
													"    if (!response.data.id) {",
													"        pm.expect(dataId).equal(0); // cardNumber existed in white list",
													"    } else {",
													"        pm.response.to.have.status(200);",
													"        pm.expect(dataId).not.equal(0);",
													"    }",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{attemptAuthIssuerBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"create published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{issuerBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82ed01ea-f2fa-43f3-b8dd-3329612209d8",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2ef2dd3d-3e57-4619-8204-a0d16b65a4c0",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "查詢人工彈性授權歷史紀錄",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aeafd9f0-2c17-4d90-9474-6ce32e9b5cc6",
												"exec": [
													"const response = pm.response.json();",
													"",
													"if(response.status===0 && response.data !== null && response.data !== null){",
													"  console.log(\"identifySymbol: \" + response.data.startRange);  ",
													"  pm.environment.set(\"identifySymbol\", response.data.startRange);",
													"} else{",
													"  console.error(\"BinRnage is empty, so can't get cardNumber.\");  ",
													"}",
													"",
													"",
													"",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query success\", function(){",
													"    pm.response.to.have.status(200);",
													"    var dataLen = 0;",
													"    if(response.data !== undefined) dataLen = response.data.length;",
													"    ",
													"    pm.expect(dataLen).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6e45afb-74a3-46b5-96bf-dea999041211",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issuerBankId\": 1,\n    \"panId\": 1,\n    \"page\": 1,\n    \"pageSize\": 20,\n    \"version\": 2\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/cardholder/attempt-auth/record",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"cardholder",
												"attempt-auth",
												"record"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "啟用3DS驗證",
					"item": [
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8cc33df1-e7e0-4e04-8a65-aa22fc851d37",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "啟用3DS驗證",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"auditId: \" + dataId);",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													"",
													"// 3DS驗證啟用PAN id",
													"pm.environment.set(\"threeDsVerifyEnabledPanId\", 1);",
													"// 3DS驗證啟用銀行id",
													"pm.environment.set(\"threeDsVerifyEnabledIssuerBankId\", 1);",
													"",
													"",
													"",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"THREE_DS_VERIFY_ENABLED\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\" : \"{{threeDsVerifyEnabledIssuerBankId}}\",\n\t\"panId\" : \"{{threeDsVerifyEnabledPanId}}\",\n\t\"cardHolderId\" : 1,\n\t\"verifyEnabled\" : true\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/cardholder/3DS/verify-enabled/update",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"cardholder",
												"3DS",
												"verify-enabled",
												"update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data.auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update {{functionType}} published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8cc33df1-e7e0-4e04-8a65-aa22fc851d37",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "查詢3DS驗證啟用紀錄列表",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var isValid = false;",
													"",
													"if(response.data !== undefined) {",
													"    isValid = response.data.length > 0",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isValid).to.equal(true);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													"",
													"// 3DS驗證啟用PAN id",
													"pm.environment.set(\"threeDsVerifyEnabledPanId\", 1);",
													"// 3DS驗證啟用銀行id",
													"pm.environment.set(\"threeDsVerifyEnabledIssuerBankId\", 1);",
													"",
													"",
													"",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"UNLOCK_OTP\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\" : 1,\n\t\"panId\" : 1,\n\t\"page\": 1, \n    \"pageSize\": 5\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/cardholder/3DS/record",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"cardholder",
												"3DS",
												"record"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "OTP解鎖",
					"item": [
						{
							"name": "Update",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8cc33df1-e7e0-4e04-8a65-aa22fc851d37",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTP解鎖",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"AUDITING\" &&",
													"response.data.id !== undefined) {",
													"    pm.environment.set(\"auditId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"auditId: \" + dataId);",
													"} else if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined){",
													"    pm.environment.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"}",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"UNLOCK_OTP\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\" : \"{{issuerBankId}}\",\n\t\"panId\" : 1,\n\t\"version\": 2\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/cardholder/otp/unlock",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"cardholder",
												"otp",
												"unlock"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login - User2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
													"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Query All with\bout self Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"var auditId = 0;",
													"",
													"var identifySymbol = pm.environment.get(\"identifySymbol\") || \"\";",
													"console.log(\"identifySymbol: \" + identifySymbol);",
													"if(identifySymbol.length > 0) {",
													"    for(var i = 0; i < len; i++) {",
													"        if(response.data[i].draftContent.indexOf(identifySymbol) < 0) continue;",
													"           ",
													"        auditId = response.data[i].auditId;",
													"        break;",
													"    }    ",
													"} else {",
													"    auditId = response.data.auditId;",
													"}",
													"",
													"var functionType = pm.environment.get(\"functionType\"); ",
													"pm.test(functionType + \" query auditing list completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    if(identifySymbol !== \"\") {",
													"        pm.expect(pm.response.text()).to.include(identifySymbol);        ",
													"    }",
													"",
													"    pm.expect(auditId).not.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing - Signing Update Published Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e11500cd-7a1f-4753-a9a6-83e4987144f2",
												"exec": [
													"const response = pm.response.json();",
													"var dataId = 0;",
													"",
													"if(response.data !== undefined && response.data.status !== undefined && response.data.status === \"STORED\" &&",
													"response.data.id !== undefined) {",
													"    pm.globals.set(\"dataId\", response.data.id); ",
													"    dataId = response.data.id;",
													"    console.log(\"dataId: \" + dataId);",
													"}",
													"",
													"pm.test(\"Sign Update Completed\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(dataId).not.equal(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"auditId\": \"{{auditId}}\",\n    \"issuerBankId\": \"{{orgBankId}}\", \n    \"functionType\": \"{{functionType}}\",\n    \"auditStatus\": \"P\",\n    \"comment\": \"update {{functionType}} published\"\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/signing",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"signing"
											]
										}
									},
									"response": []
								},
								{
									"name": "Auditing List - Without Insert one Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "500674dd-c2ab-4931-8855-ed7545904c31",
												"exec": [
													"const response = pm.response.json();",
													"var len = response.data.length;",
													"const identifySymbol = pm.environment.get(\"identifySymbol\");",
													"",
													"var isAuditItemStillThere = false;",
													"var auditId = pm.environment.get(\"auditId\"); ",
													"",
													"for(var i = 0; i < len; i++) {",
													"    if(response.data[0].auditId !== auditId) continue;",
													"    ",
													"    isAuditItemStillThere = true;",
													"}",
													"pm.test(\"Insert Request Removed\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isAuditItemStillThere).to.equal(false);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3a5ff1b7-d067-4783-85d6-25da86db69bb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"functionType\": \"{{functionType}}\",\n\t\"issuerBankId\": \"{{orgBankId}}\",\n\t\"page\": 0,\n\t\"pageSize\": 4\n}"
										},
										"url": {
											"raw": "{{portal-url}}/auth/auditing/list",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"auditing",
												"list"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Query",
							"item": [
								{
									"name": "Login - User1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c5b2eb4-fa83-43eb-8294-948d51f17d26",
												"exec": [
													"const response = pm.response.json();",
													"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8cc33df1-e7e0-4e04-8a65-aa22fc851d37",
												"exec": [
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"\");",
													"",
													"// 主要資料id",
													"pm.environment.set(\"dataId\", \"\");",
													"// 相關子模組id",
													"pm.environment.set(\"subDataId\", \"\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account",
													"value": "SYSTEMADMIN1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{portal-url}}/auth/login",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "查詢OTP解鎖紀錄",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cd30e53-8fb1-43c4-b2b5-0126a171e580",
												"exec": [
													"const response = pm.response.json();",
													"var isValid = false;",
													"",
													"if(response.data !== undefined ) {",
													"  isValid = response.data.length > 0",
													"} ",
													"",
													"pm.test(\"Update Request Completed.\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(isValid).to.equal(true);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea2e19ca-638a-47bd-928f-7384f1274eed",
												"exec": [
													"",
													"// 3DS驗證啟用PAN id",
													"pm.environment.set(\"threeDsVerifyEnabledPanId\", 1);",
													"// 3DS驗證啟用銀行id",
													"pm.environment.set(\"threeDsVerifyEnabledIssuerBankId\", 1);",
													"",
													"",
													"",
													"",
													"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
													"pm.environment.set(\"identifySymbol\", \"\");",
													"",
													"// 測試的模組名稱 (對應Enum AuditFunctionType)",
													"pm.environment.set(\"functionType\", \"UNLOCK_OTP\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "x-csrf-token",
												"type": "text",
												"value": "{{acs-csrf-token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"issuerBankId\" : \"{{issuerBankId}}\",\n\t\"panId\" : 1\n}\t\n"
										},
										"url": {
											"raw": "{{portal-url}}/auth/cardholder/otp/record",
											"host": [
												"{{portal-url}}"
											],
											"path": [
												"auth",
												"cardholder",
												"otp",
												"record"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Transaction",
			"item": [
				{
					"name": "Query",
					"item": [
						{
							"name": "Login - User1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82ed01ea-f2fa-43f3-b8dd-3329612209d8",
										"exec": [
											"const response = pm.response.json();",
											"pm.globals.set(\"acs-csrf-token\", response.data.csrf_token);",
											"pm.environment.set(\"issuerBankId\", response.data.issuerBankId);",
											"pm.environment.set(\"functionType\", \"TX_QUERY\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2ef2dd3d-3e57-4619-8204-a0d16b65a4c0",
										"exec": [
											"// 設定一個在審核可以用來識別的字串, 若沒有的話需要清空",
											"pm.environment.set(\"identifySymbol\", \"\");",
											"",
											"// 測試的模組名稱 (對應Enum AuditFunctionType)",
											"pm.environment.set(\"functionType\", \"\");",
											"",
											"// 主要資料id",
											"pm.environment.set(\"dataId\", \"\");",
											"// 相關子模組id",
											"pm.environment.set(\"subDataId\", \"\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "SYSTEMADMIN1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{portal-url}}/auth/login",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "查詢交易紀錄 3DS 2.0 (分頁，多筆)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeafd9f0-2c17-4d90-9474-6ce32e9b5cc6",
										"exec": [
											"const response = pm.response.json();",
											"",
											"if(response.status===0 && response.data !== null && response.data[0] !== null){",
											"  console.log(\"dataId: \" + response.data[0].id);  ",
											"  pm.environment.set(\"dataId\", response.data[0].id);",
											"  pm.environment.set(\"acsTransId\", response.data[0].acsTransId);",
											"} else{",
											"  console.log(\"No such transation-log data\");",
											"}",
											"",
											" ",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" query success\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"page\": 1,\n    \"pageSize\": 20,\n    \"issuerBankId\": \"{{issuerBankId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/transaction/record",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"transaction",
										"record"
									]
								}
							},
							"response": []
						},
						{
							"name": "查詢交易紀錄-摘要 3DS 2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeafd9f0-2c17-4d90-9474-6ce32e9b5cc6",
										"exec": [
											"const response = pm.response.json();",
											"",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" sumary query success\", function(){",
											"    pm.response.to.have.status(200);",
											"    var dataId = pm.environment.get(\"dataId\");",
											"    if(dataId !== null){//代表此銀行有交易紀錄",
											"        var isValid = response.data.cardholderName !== null;",
											"        pm.expect(isValid).to.equal(true);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerBankId\": \"{{issuerBankId}}\",\n    \"transactionLogId\": \"{{dataId}}\"\n}"
								},
								"url": {
									"raw": "{{portal-url}}/auth/transaction/record/summary",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"transaction",
										"record",
										"summary"
									]
								}
							},
							"response": []
						},
						{
							"name": "查詢簡訊紀錄",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeafd9f0-2c17-4d90-9474-6ce32e9b5cc6",
										"exec": [
											"const response = pm.response.json();",
											" ",
											"var functionType = pm.environment.get(\"functionType\"); ",
											"pm.test(functionType + \" sms record query success\", function(){",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "x-csrf-token",
										"type": "text",
										"value": "{{acs-csrf-token}}"
									}
								],
								"url": {
									"raw": "{{portal-url}}/auth/transaction/record/sms/{{acsTransId}}",
									"host": [
										"{{portal-url}}"
									],
									"path": [
										"auth",
										"transaction",
										"record",
										"sms",
										"{{acsTransId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}